
<iframe src="/sample" frameborder="0" width="1000px" height="100%" id="frame"></iframe>
<div id="heatmap">
  <canvas id="c"></canvas>
</div>

<script>
"use strict";

const radius1 = 1;
const radius2 = 10;
const canvas = document.getElementById("c");
const heatMap = document.getElementById("heatmap");
const wt = heatMap.clientWidth;
const ht = heatMap.clientHeight;
canvas.width = wt;
canvas.height = ht;
const ctx = canvas.getContext("2d");

// this handler is listening to the click event of the user
const createHeatMap = function (coordinates) {
  // get the x and y values of the user's click position
  for (let {x, y} of coordinates) {
    // create a radial gradient with the defined parameters. we want to draw an alphamap
    let rgr = ctx.createRadialGradient(x, y, radius1, x, y, radius2);
    // the center of the radial gradient has .1 alpha value
    rgr.addColorStop(0, "rgba(0,0,0,0.5)");
    // and it fades out to 0
    rgr.addColorStop(1, "rgba(0,0,0,0)");
    // drawing the gradient
    ctx.fillStyle = rgr;
    ctx.fillRect(x - radius2, y - radius2, 2 * radius2, 2 * radius2);
    // at least colorize the area
    colorize(x, y);
  }
};

// function for coloring the heatmap
function colorize(x, y) {
  // get the image data for the click area
  let image = ctx.getImageData(
      x - radius2,
      y - radius2,
      2 * radius2,
      2 * radius2
    ),
    // some performance tweaks
    imageData = image.data,
    length = imageData.length;
  // loop thru the area
  for (let i = 3; i < length; i += 4) {
    let r = 0,
      g = 0,
      b = 0,
      tmp = 0,
      // &#91;0&#93; -> r, [1] -> g, [2] -> b, [3] -> alpha
      alpha = imageData[i];
    // coloring depending on the current alpha value
    if (alpha <= 255 && alpha >= 235) {
      // 緑を抜く
      tmp = 255 - alpha;
      r = 255 - tmp;
      g = tmp * 12;
    } else if (alpha <= 234 && alpha >= 200) {
      // 赤色を混ぜる
      tmp = 234 - alpha;
      r = 255 - tmp * 8;
      g = 255;
    } else if (alpha <= 199 && alpha >= 150) {
      // 青色を抜く
      tmp = 199 - alpha;
      g = 255;
      b = tmp * 5;
    } else if (alpha <= 149 && alpha >= 100) {
      // 緑を混ぜる
      tmp = 149 - alpha;
      g = 255 - tmp * 5;
      b = 255;
    } else b = 255; // 初めは青色に塗る
    // we ve started with i=3
    // set the new r, g and b values
    imageData[i - 3] = r;
    imageData[i - 2] = g;
    imageData[i - 1] = b;
  }
  // the rgb data manipulation didn't affect the ImageData object(defined on the top)
  // after the manipulation process we have to set the manipulated data to the ImageData object
  ctx.putImageData(image, x - radius2, y - radius2);
}

createHeatMap(gon.coordinates);
</script>